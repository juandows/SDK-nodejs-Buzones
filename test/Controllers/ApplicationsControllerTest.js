/*
 * APIBuzonesLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */
 'use strict';

const chai = require('chai');
const assert = chai.assert;
const TestHelper = require("../TestHelper");
const APIHelper = require("../../lib/APIHelper");
const testerlib = require("../../lib");
const testConfiguration = require("../TestBootstrap");
const baseController = require("../../lib/Controllers/BaseController");

const controller = testerlib.ApplicationsController;
const CrearUnMensajeAAplicaciNResponse = testerlib.CrearUnMensajeAAplicaciNResponse;
const CrearUnMensajeAAplicaciNRequest = testerlib.CrearUnMensajeAAplicaciNRequest;
const LeerAplicacionesResponse = testerlib.LeerAplicacionesResponse;

describe("ApplicationsController Tests", function tests() {
    this.timeout(testConfiguration.TEST_TIMEOUT);

    /**
     * Crea un nuevo mensaje en los buzones de los usuarios(group) de la aplicaci√≥n (iris2).
     */
    it("should testCrearUnMensajeAAplicaciN1 response", function testCrearUnMensajeAAplicaciN1Test(done) {
        // parameters for the API call
        let token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE1MTc5Mzk5NDd9.-pLDemUYmYPpjG5CZ7VI7UUBcC8mC_KAbEyNpzHsTMw';
        let body = baseController.getObjectMapper().mapObject(
{

  "leido": false,

  "borrado": false,

  "data": {

    "type" : "recogidas_pendientes",

    "numero" : 7

  }

}, 'CrearUnMensajeAAplicaciNRequest');
        let contentType = 'application/json';

        controller.createApplicationsIris2MessagesPost(token, body, contentType, function callback(error, response, context) {
            // test response code
            assert.equal(200, context.response.statusCode);
            assert.isNotNull(response);
            assert.equal('\n{\n\n\n"data":\n\n        {\n\n            "id": "123456",\n\n            "leido": false,\n\n            "borrado": false,\n\n            "fecha": "2017-10-20T15:59:45.000Z",\n\n            "data": {\n\n                "type": "incidencias_pregunta",\n\n                "referencia": "123456789"\n\n            }\n\n        }\n\n}\n', context.response.body);
            done();
        });
    });

    /**
     * Devuelve todas las aplicaciones que tienen mensajes.
     */
    it("should testLeerAplicaciones1 response", function testLeerAplicaciones1Test(done) {
        // parameters for the API call
        let token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE1MTY4NzUwMDN9.2Eo8_bhTyLVywxi4P2zTSQ86WLXwCMdneJdmygeClaw';

        controller.getApplicationsGet(token, function callback(error, response, context) {
            // test response code
            assert.equal(200, context.response.statusCode);
            assert.isNotNull(response);
            assert.equal('\n{\n\n    "data":    [\n\n        {"id":"iris2", "id":"portal"}    \n\n    ]\n\n}', context.response.body);
            done();
        });
    });

});
